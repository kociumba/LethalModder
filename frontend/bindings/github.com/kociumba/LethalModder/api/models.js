// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Create as $Create} from "@wailsio/runtime";

/**
 * PackageListing represents the structure of each package listing
 */
export class PackageListing {
    /**
     * Creates a new PackageListing instance.
     * @param {Partial<PackageListing>} [$$source = {}] - The source object to create the PackageListing.
     */
    constructor($$source = {}) {
        if (!("name" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["name"] = "";
        }
        if (!("full_name" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["full_name"] = "";
        }
        if (!("owner" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["owner"] = "";
        }
        if (!("package_url" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["package_url"] = "";
        }
        if (!("donation_link" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["donation_link"] = "";
        }
        if (!("date_created" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["date_created"] = "";
        }
        if (!("date_updated" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["date_updated"] = "";
        }
        if (!("uuid4" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["uuid4"] = "";
        }
        if (!("rating_score" in $$source)) {
            /**
             * @member
             * @type {number}
             */
            this["rating_score"] = 0;
        }
        if (!("is_pinned" in $$source)) {
            /**
             * @member
             * @type {boolean}
             */
            this["is_pinned"] = false;
        }
        if (!("is_deprecated" in $$source)) {
            /**
             * @member
             * @type {boolean}
             */
            this["is_deprecated"] = false;
        }
        if (!("has_nsfw_content" in $$source)) {
            /**
             * @member
             * @type {boolean}
             */
            this["has_nsfw_content"] = false;
        }
        if (!("categories" in $$source)) {
            /**
             * @member
             * @type {string[]}
             */
            this["categories"] = [];
        }
        if (!("versions" in $$source)) {
            /**
             * this may have something to do with the error
             * @member
             * @type {Version[]}
             */
            this["versions"] = [];
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new PackageListing instance from a string or object.
     * @param {any} [$$source = {}]
     * @returns {PackageListing}
     */
    static createFrom($$source = {}) {
        const $$createField12_0 = $$createType0;
        const $$createField13_0 = $$createType2;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("categories" in $$parsedSource) {
            $$parsedSource["categories"] = $$createField12_0($$parsedSource["categories"]);
        }
        if ("versions" in $$parsedSource) {
            $$parsedSource["versions"] = $$createField13_0($$parsedSource["versions"]);
        }
        return new PackageListing(/** @type {Partial<PackageListing>} */($$parsedSource));
    }
}

/**
 * Version represents the structure of a version listing
 */
export class Version {
    /**
     * Creates a new Version instance.
     * @param {Partial<Version>} [$$source = {}] - The source object to create the Version.
     */
    constructor($$source = {}) {
        if (!("date_created" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["date_created"] = "";
        }
        if (!("dependencies" in $$source)) {
            /**
             * @member
             * @type {string[]}
             */
            this["dependencies"] = [];
        }
        if (!("description" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["description"] = "";
        }
        if (!("download_url" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["download_url"] = "";
        }
        if (!("downloads" in $$source)) {
            /**
             * @member
             * @type {number}
             */
            this["downloads"] = 0;
        }
        if (!("file_size" in $$source)) {
            /**
             * @member
             * @type {number}
             */
            this["file_size"] = 0;
        }
        if (!("full_name" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["full_name"] = "";
        }
        if (!("icon" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["icon"] = "";
        }
        if (!("is_active" in $$source)) {
            /**
             * @member
             * @type {boolean}
             */
            this["is_active"] = false;
        }
        if (!("name" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["name"] = "";
        }
        if (!("uuid4" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["uuid4"] = "";
        }
        if (!("version_number" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["version_number"] = "";
        }
        if (!("website_url" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["website_url"] = "";
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new Version instance from a string or object.
     * @param {any} [$$source = {}]
     * @returns {Version}
     */
    static createFrom($$source = {}) {
        const $$createField1_0 = $$createType0;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("dependencies" in $$parsedSource) {
            $$parsedSource["dependencies"] = $$createField1_0($$parsedSource["dependencies"]);
        }
        return new Version(/** @type {Partial<Version>} */($$parsedSource));
    }
}

// Private type creation functions
const $$createType0 = $Create.Array($Create.Any);
const $$createType1 = Version.createFrom;
const $$createType2 = $Create.Array($$createType1);
